# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI"
on: 
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
jobs:
  test:
    name: "RSpec"
    runs-on: ubuntu-latest
    env:
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
      RAILS_ENV: ${{ vars.RAILS_ENV }}
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run tests
        run: |
          chmod -R 777 .
          make build
          make db-create
          make migration
          make test
      - name: Store coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: coverage
  lint:
    name: "Rubocop"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run rubocop
        run: make lint
  brakeman:
    name: "Brakeman"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run brakman
        run: make brakeman
  active_record_doctor:
    name: "AR Doctor"
    runs-on: ubuntu-latest
    env:
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
      RAILS_ENV: ${{ vars.RAILS_ENV }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run doctor
        run: |
          chmod -R 777 .
          make build
          make db-create
          make migration
          make doctor
  coverage:
    needs: [ test ]
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code1
        uses: actions/checkout@v4
      - name: Download coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage_report
          path: coverage
      - name: Fetch reporter
        run: |
          curl -L codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -o test_reporter
          chmod +x test_reporter
      - name: Upload report
        run: |
          ./test_reporter before-build
          ./test_reporter format-coverage -t simplecov -p /home/biddy/web
          ./test_reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID}}

